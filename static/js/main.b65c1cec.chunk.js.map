{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","md","setMD","viewCycle","setView","className","onClick","console","log","onChange","e","preventDefault","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA0CeA,MArCf,WAAgB,IAAD,EAEOC,mBAAS,4CAFhB,mBAENC,EAFM,KAEFC,EAFE,OAQgBF,mBAAS,GARzB,mBAQNG,EARM,KAQKC,EARL,KAoBb,OACE,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,aAAf,UACI,2CACA,qBAAKC,QAdI,WAEfF,EADa,IAAZD,EACO,EAGAA,EAAU,GAEpBI,QAAQC,IAAIL,IAOsBE,UAAU,UAApC,4BAEJ,sBAAKA,UAAU,OAAf,WACkB,IAAdF,GAAiC,IAAdA,IAAoB,0BAAUM,SAxBpC,SAACC,GACtBA,EAAEC,iBACFT,EAAMQ,EAAEE,OAAOC,QAuByCA,MAASZ,EACTI,UAAU,cAE5C,IAAdF,GAAiC,IAAdA,IAAoB,cAAC,IAAD,CAAUE,UAAU,KAApB,SAA0BJ,WCxB9Da,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b65c1cec.chunk.js","sourcesContent":["import './App.css';\nimport Markdown from 'markdown-to-jsx'\nimport React, { useState } from 'react'\n\n\nfunction App() {\n\n  const [md, setMD] = useState(\"#### Start writing your markdown here...\")\n  const updateMDstring = (e) => {\n    e.preventDefault()\n    setMD(e.target.value)\n  }\n\n  const [viewCycle, setView] = useState(0)\n  // 0: both r visible 1: only textarea visible 2: only MD visible\n  const changeView = () => {\n    if(viewCycle===2) {\n      setView(0)\n    }\n    else {\n      setView(viewCycle+1)\n    }\n    console.log(viewCycle)\n  }\n\n  return (\n    <div className=\"App\">\n        <div className='headerComp'>\n            <div>Markdown</div>\n            <div onClick={changeView} className=\"viewBtn\">Toggle View</div>\n        </div>\n        <div className='view'>\n          {(viewCycle === 0 || viewCycle === 1) && <textarea onChange={updateMDstring} \n                                                            value = {md}\n                                                            className='textarea'>\n                                                    </textarea>}\n          {(viewCycle === 0 || viewCycle === 2) && <Markdown className=\"md\">{md}</Markdown>}                                          \n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}